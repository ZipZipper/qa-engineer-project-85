---
- summary: |
    Проверка на регистрацию нового аккаунта
  requirement: |
    Регистрация проходит успешно
  prerequisites: |
    Открыта страница сайта
  test-data: |
    - Создаем аккаунт
  steps:
    - Sign up
    - Заполняем данные регистрации
  expected-result: |
    Пользователь должен успешно пройти регистрацию
    
- summary: |
    Проверка на авторизацию через зарегистрированный аккаунт
  requirement: |
    Авторизация проходит успешно
  prerequisites: |
    Открыта страница сайта
  test-data: |
    - Созданный аккаунт 
  steps:
    - Sign in
    - Авторизовываемся под своим логином и паролем
  expected-result: |
    Пользователь должен пройти авторизацию

- summary: |
    Проверка входа пользователя с помощью Github
  requirement: |
    Созданная учетная запись на GitHub
  prerequisites: |
    Открыта страница авторизации
  test-data: |
    - Наличие аккаунта на Github
  steps:
    - Sign in
    - Sign in with Github
  expected-result: |
    Должна пройти авторизация через Github

- summary: |
    Проверка создания аккаунта на уже зарегистрированный Email
  requirement: 
    Вводим данные уже зарегистрированной почты регистрируя новый аккаунт 
  prerequisites: |
    Открыта страница сайта
  test-data: |
    - Ранее зарегистрированная почта
  steps:
    - Sign up
    - Вводим данные 
  expected-result: |
    Пользователь должен получить сообщение об ошибке 'Email is already taken'

- summary: |
    Проверка на отправку сообщений в чат
  requirement: 
    Сообщение отправляется в общий чат
  prerequisites: |
    Открыта главная страница
  test-data: |
    - Авторизованный аккаунт
  steps:
    - Набираем сообщение в общий чат
  expected-result: |
    Другие пользователи должны увидеть сообщение в общем чате

- summary: |
    Проверка входа пользователя с помощью Discord
  requirement: |
    Созданная учетная запись в Discod
  prerequisites: |
    Открыта страница авторизации
  test-data: |
    - Наличие аккаунта Discord
  steps:
    - Sign in
    - Sign in with Discod
  expected-result: |
    Должна пройти авторизация через Discod

- summary: |
    Проверка создания игры
  requirement: 
    Игра должна быть создана 
  prerequisites: |
    Открыта главная страница
  test-data: |
    - Авторизованный аккаунт
  steps:
    - Create a game
    - With a bot
    - Create battle
  expected-result: |
    Пользователь должен перейти в игру с ботом

- summary: |
    Проверка на завершение игры
  requirement: 
    Завершаем игру проходя задание или сдаемся
  prerequisites: |
    Находясь в игре с ботом
  test-data: |
    - Авторизованный аккаунт
  steps:
    - Вводим ответ
    - Жмем кнопку run или сдаться
  expected-result: |
    Пользователь должен получить сообщение о победе или поражение 

- summary: |
    Попытка зайти в уже созданную игру другим пользователем
  requirement: 
    Пользователь должен присоединится к созданной игре
  prerequisites: |
    Главная страница
  test-data: |
    - Авторизованный аккаунт
  steps:
    - Выбираем игру из списка 
    - Жмем fight
  expected-result: |
    Должна начаться игра против другого пользователя

- summary: |
    Проверка на возможность просмотреть уже завершенные игры
  requirement: 
    Пользователь должен иметь возможность смотреть сыгранные игры
  prerequisites: |
    Главная страница
  test-data: |
    - Авторизованный аккаунт
  steps:
    - Переходим в профиль
    - Completed games
    - Жмем кнопку Show выбрав игру
  expected-result: |
    Пользователь должен попасть в уже сыгранную игру

- summary: |
    Проверка на работоспособность списка лидеров 
  requirement: 
    Должны отображаться игроки в рейтинге за неделю/месяц/все время
  prerequisites: |
    Главная страница
  test-data: |
    - Авторизованный аккаунт
  steps:
    - Жмем кнопку weak/month/all
  expected-result: |
    Должны отображаться игроки по рейтингу в топе

- summary: |
    Проверка на отображения всех пользователей в списках рейтинга
  requirement: 
    При попытке поиска по нику пользователь должен быть найден
  prerequisites: |
    Главная страница
  test-data: |
    - Авторизованный аккаунт
  steps:
    - жмем Top list
    - В поиске по 'юзернейму' вводим ник аккаунта
  expected-result: |
    Пользователь должен увидеть себя в списке,а также Ранг/рейтинг/количество сыгранных игр/дата создания аккаунта/через какой сервис была авторизация
